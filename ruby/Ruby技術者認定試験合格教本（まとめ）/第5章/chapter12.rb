"Time"
# 1970年01月01日は起算時

"Timeオブジェクト生成"
Time.new # 現在時刻のTimeオブジェクトを生成して返す  
Time.now # 現在時刻のTimeオブジェクトを生成して返す  
Time.at # 引数で指定した起算時からの秒数に対応するTimeオブジェクトを生成して返す、さらに精度が必要な場合には、2番目の引数にマイクロ秒を指定する
Time.mktime # 与えらた引数の数に応じて、意味が変わるメソッドでもあるため、注意
# 引数は7個の場合は先頭から（年、月、日、時、分、秒、マイクロ秒）
# 引数は10個の場合は先頭から（秒、分、時、日、月、年、曜日、年日、夏時間かどうかの真理値、ライムゾーン）
Time.local # Time.mktimeと同じ
Time.gm # Time.mktimeと同じが、タイムゾーンがUTC
Time.utc # Time.gmと同じ

Time.now #=> 2023-10-26 01:38:52.365659 +0900
Time.at(12345) #=> 1970-01-01 12:25:45 +0900
Time.at(123, 123) #=> 1970-01-01 09:02:03.000123 +0900
Time.mktime(2017) #=> 2017-01-01 00:00:00 +0900
Time.mktime(0, 0, 0, 7, 7, 2017, 4, 188, false, "JST") #=> 2017-07-07 00:00:00 +0900

"Timeオブジェクトの属性を取得する"
year # 年
mon / month # 月
day / mday # 日
hour # 時
min # 分
sec # 秒
usec / tv_usec # マイクロ秒 
wday # 曜日に対する数値を返す。日曜から土曜（0 ~ 6）
yday # 1月1日からの日数を返す
zone # 現在の標準時間帯を参照
isdst / dst? # 夏時間かどうか
gmt? / utc? # UTCかどうかを返す
gmt_offset / gmtoff # UTC時刻との差を秒単位の数値として返す
