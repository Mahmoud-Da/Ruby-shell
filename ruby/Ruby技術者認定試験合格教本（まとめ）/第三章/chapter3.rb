"文字列"
# StringClassから生成されます
a = "ab"
p a  #=> "ab"
p a.class #=> String
b = "ab" 'cd' 
p b  #=> "abcd"

"式展開"
a = 1
p "a is #{a}" #=> "a is 1"
p 'a is #{a}' #=> "a is \#{a}"

"文字列から数字値に変換"
"100".to_i #=> 100
"1.9".to_f #=> 1.9
"5/2".to_r #=> (5/2)
"1+2i".to_c #=> (1+2i)
"123ab23".to_i #=> 123 {最初のstringまで「a」まで変換されます}
"1.9".to_i #=> 1 {最初の「.」まで「a」まで変換されます}
"1.9.9".to_f #=> 1.9 {2番目の「.」まで「a」まで変換されます}

"バックスラッシュ記法"
\x  #=> x文字そのもの
\n #=> 改行
\r #=> キャリッジリターン
\f #=> 改ページ
\a #=> ベル
\e #=> エスケープ
\s #=> スペース
\b #=> バックスペース
\t #=> タブ
\v #=> 重値タブ
\nnn #=> 8進数表記
\xnn #=> 16進数表記

"例"
p "\101" #=> "A"
p "\x41" #=> "A"

"pとprintとputsの違い"
p: 
# 改行：引数ごとに改行
# 出力内容の構築：insepct
# バックスラッシュ記法：そのまま出力

print:
# 改行：しない
# 出力内容の構築：to_s
# バックスラッシュ記法：適用した結果出力

puts:
# 改行：引数ごとに改行
# 出力内容の構築：to_s
# バックスラッシュ記法：適用した結果出力

"ビアドキュメント"
# 終端を示す職別子の前にスペースなどの文字記載してはいけない

"例"
query = <<SQL 
    select *
    from my_table
SQL
query #=> "    select *\n    from my_table\n"
# 終端を示す職別子SQLを使用

"階層が深い場青のビアドキュメント"
def foo
  <<-Result
   Ru
   By
  Result
end
p foo #=> "   Ru\n   By\n"

"シングルクォート"
a = 1
s = <<'TEST'
#{a}
TEST
p s #=> "\#{a}\n"

"ダブルクォート"
a = 1
s = <<"TEST"
#{a}
TEST
p s #=> "1\n"
